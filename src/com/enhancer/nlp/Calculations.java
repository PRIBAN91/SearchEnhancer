package com.enhancer.nlp;

@SuppressWarnings("unused")
public class Calculations {

	// Calculate maximum Edit Distance using search string length as input
	public int determineMaxEdist(int len) {

		double res = 0;
		res += Math.log(len) / Math.log(2);
		if (len >= 9)
			res += (Math.log(len) / Math.log(3)) - 1;
		if (len >= 16)
			res += (Math.log(len) / Math.log(4)) - 1;
		if (len >= 25)
			res += (Math.log(len) / Math.log(5)) - 1;
		if (len >= 36)
			res += (Math.log(len) / Math.log(6)) - 1;
		int result = (int) Math.round(res);

		return result;
	}

	public void confusionMatrixAdd() {

		double add[][] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 15, 1, 14, 7, 10, 0, 1, 1, 33, 1, 4, 31, 2, 39, 12, 4, 3, 28, 134, 7, 28, 0, 1, 1, 4, 1 },
				{ 0, 3, 11, 0, 0, 7, 0, 1, 0, 50, 0, 0, 15, 0, 1, 1, 0, 0, 5, 16, 0, 0, 3, 0, 0, 0, 0 },
				{ 0, 19, 0, 54, 1, 13, 0, 0, 18, 50, 0, 3, 1, 1, 1, 7, 1, 0, 7, 25, 7, 8, 4, 0, 1, 0, 0 },
				{ 0, 18, 0, 3, 17, 14, 2, 0, 0, 9, 0, 0, 6, 1, 9, 13, 0, 0, 6, 119, 0, 0, 0, 0, 0, 5, 0 },
				{ 0, 39, 2, 8, 76, 147, 2, 0, 1, 4, 0, 3, 4, 6, 27, 5, 1, 0, 83, 417, 6, 4, 1, 10, 2, 8, 0 },
				{ 0, 1, 0, 0, 0, 2, 27, 1, 0, 12, 0, 0, 10, 0, 0, 0, 0, 0, 5, 23, 0, 1, 0, 0, 0, 1, 0 },
				{ 0, 8, 0, 0, 0, 5, 1, 5, 12, 8, 0, 0, 2, 0, 1, 1, 0, 1, 5, 69, 2, 3, 0, 1, 0, 0, 0 },
				{ 0, 4, 1, 0, 1, 24, 0, 10, 18, 17, 2, 0, 1, 0, 1, 4, 0, 0, 16, 24, 22, 1, 0, 5, 0, 3, 0 },
				{ 0, 10, 3, 13, 13, 25, 0, 1, 1, 69, 2, 1, 17, 11, 33, 27, 1, 0, 9, 30, 29, 11, 0, 0, 1, 0, 1 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
				{ 0, 2, 4, 0, 1, 9, 0, 0, 1, 1, 0, 1, 1, 0, 0, 2, 1, 0, 0, 95, 0, 1, 0, 0, 0, 4, 0 },
				{ 0, 3, 1, 0, 1, 38, 0, 0, 0, 79, 0, 2, 128, 1, 0, 7, 0, 0, 0, 97, 7, 3, 1, 0, 0, 2, 0 },
				{ 0, 11, 1, 1, 0, 17, 0, 0, 1, 6, 0, 1, 0, 102, 44, 7, 2, 0, 0, 47, 1, 2, 0, 1, 0, 0, 0 },
				{ 0, 15, 5, 7, 13, 52, 4, 17, 0, 34, 0, 1, 1, 26, 99, 12, 0, 0, 2, 156, 53, 1, 1, 0, 0, 1, 0 },
				{ 0, 14, 1, 1, 3, 7, 2, 1, 0, 28, 1, 0, 6, 3, 13, 64, 30, 0, 16, 59, 4, 19, 1, 0, 0, 1, 1 },
				{ 0, 23, 0, 1, 1, 10, 0, 0, 20, 3, 0, 0, 2, 0, 0, 26, 70, 0, 29, 52, 9, 1, 1, 1, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
				{ 0, 15, 2, 1, 0, 89, 1, 1, 2, 64, 0, 0, 5, 9, 7, 10, 0, 0, 132, 273, 29, 7, 0, 1, 0, 10, 0 },
				{ 0, 13, 1, 7, 20, 41, 0, 1, 50, 101, 0, 2, 2, 10, 7, 3, 1, 0, 1, 205, 49, 7, 0, 1, 0, 7, 0 },
				{ 0, 39, 0, 0, 3, 65, 1, 10, 24, 59, 1, 0, 6, 3, 1, 23, 1, 0, 54, 264, 183, 11, 0, 5, 0, 6, 0 },
				{ 0, 15, 0, 3, 0, 9, 0, 0, 1, 24, 1, 1, 3, 3, 9, 1, 3, 0, 49, 19, 27, 26, 0, 0, 2, 3, 0 },
				{ 0, 0, 2, 0, 0, 36, 0, 0, 0, 10, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 5, 1, 0, 0, 0 },
				{ 0, 0, 0, 0, 1, 10, 0, 0, 1, 1, 0, 1, 1, 0, 2, 0, 0, 1, 1, 8, 0, 2, 0, 4, 0, 0, 0 },
				{ 0, 0, 0, 18, 0, 1, 0, 0, 6, 1, 0, 0, 0, 1, 0, 3, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0 },
				{ 0, 5, 1, 2, 0, 3, 0, 0, 0, 2, 0, 0, 1, 1, 6, 0, 0, 0, 1, 33, 1, 13, 0, 1, 0, 2, 0 },
				{ 0, 2, 0, 0, 0, 5, 1, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4 },
				{ 0, 46, 8, 9, 8, 26, 11, 14, 3, 5, 1, 17, 5, 6, 2, 2, 10, 0, 6, 23, 2, 11, 1, 2, 1, 1, 2 } };

	}

	public double addProbability(int i, int j) {

		if (i < 1 || i > 26 || j < 1 || j > 26)
			return 0;

		double addProb[][] = {
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.039, 0.0030, 0.037, 0.018, 0.026, 0.0, 0.0030, 0.0030, 0.086, 0.0030, 0.01, 0.081, 0.0050,
						0.102, 0.031, 0.01, 0.0080, 0.073, 0.351, 0.018, 0.073, 0.0, 0.0030, 0.0030, 0.01, 0.0030 },
				{ 0.0, 0.027, 0.097, 0.0, 0.0, 0.062, 0.0, 0.0090, 0.0, 0.442, 0.0, 0.0, 0.133, 0.0, 0.0090, 0.0090,
						0.0, 0.0, 0.044, 0.142, 0.0, 0.0, 0.027, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.086, 0.0, 0.244, 0.0050, 0.059, 0.0, 0.0, 0.081, 0.226, 0.0, 0.014, 0.0050, 0.0050, 0.0050,
						0.032, 0.0050, 0.0, 0.032, 0.113, 0.032, 0.036, 0.018, 0.0, 0.0050, 0.0, 0.0 },
				{ 0.0, 0.081, 0.0, 0.014, 0.077, 0.063, 0.0090, 0.0, 0.0, 0.041, 0.0, 0.0, 0.027, 0.0050, 0.041, 0.059,
						0.0, 0.0, 0.027, 0.536, 0.0, 0.0, 0.0, 0.0, 0.0, 0.023, 0.0 },
				{ 0.0, 0.046, 0.0020, 0.0090, 0.089, 0.172, 0.0020, 0.0, 0.0010, 0.0050, 0.0, 0.0040, 0.0050, 0.0070,
						0.032, 0.0060, 0.0010, 0.0, 0.097, 0.487, 0.0070, 0.0050, 0.0010, 0.012, 0.0020, 0.0090, 0.0 },
				{ 0.0, 0.012, 0.0, 0.0, 0.0, 0.024, 0.325, 0.012, 0.0, 0.145, 0.0, 0.0, 0.12, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.06, 0.277, 0.0, 0.012, 0.0, 0.0, 0.0, 0.012, 0.0 },
				{ 0.0, 0.065, 0.0, 0.0, 0.0, 0.04, 0.0080, 0.04, 0.097, 0.065, 0.0, 0.0, 0.016, 0.0, 0.0080, 0.0080,
						0.0, 0.0080, 0.04, 0.556, 0.016, 0.024, 0.0, 0.0080, 0.0, 0.0, 0.0 },
				{ 0.0, 0.026, 0.0060, 0.0, 0.0060, 0.156, 0.0, 0.065, 0.117, 0.11, 0.013, 0.0, 0.0060, 0.0, 0.0060,
						0.026, 0.0, 0.0, 0.104, 0.156, 0.143, 0.0060, 0.0, 0.032, 0.0, 0.019, 0.0 },
				{ 0.0, 0.032, 0.01, 0.042, 0.042, 0.081, 0.0, 0.0030, 0.0030, 0.224, 0.0060, 0.0030, 0.055, 0.036,
						0.107, 0.088, 0.0030, 0.0, 0.029, 0.097, 0.094, 0.036, 0.0, 0.0, 0.0030, 0.0, 0.0030 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.016, 0.033, 0.0, 0.0080, 0.073, 0.0, 0.0, 0.0080, 0.0080, 0.0, 0.0080, 0.0080, 0.0, 0.0, 0.016,
						0.0080, 0.0, 0.0, 0.772, 0.0, 0.0080, 0.0, 0.0, 0.0, 0.033, 0.0 },
				{ 0.0, 0.0080, 0.0030, 0.0, 0.0030, 0.103, 0.0, 0.0, 0.0, 0.214, 0.0, 0.0050, 0.346, 0.0030, 0.0, 0.019,
						0.0, 0.0, 0.0, 0.262, 0.019, 0.0080, 0.0030, 0.0, 0.0, 0.0050, 0.0 },
				{ 0.0, 0.045, 0.0040, 0.0040, 0.0, 0.07, 0.0, 0.0, 0.0040, 0.025, 0.0, 0.0040, 0.0, 0.418, 0.18, 0.029,
						0.0080, 0.0, 0.0, 0.193, 0.0040, 0.0080, 0.0, 0.0040, 0.0, 0.0, 0.0 },
				{ 0.0, 0.03, 0.01, 0.014, 0.026, 0.104, 0.0080, 0.034, 0.0, 0.068, 0.0, 0.0020, 0.0020, 0.052, 0.198,
						0.024, 0.0, 0.0, 0.0040, 0.312, 0.106, 0.0020, 0.0020, 0.0, 0.0, 0.0020, 0.0 },
				{ 0.0, 0.051, 0.0040, 0.0040, 0.011, 0.025, 0.0070, 0.0040, 0.0, 0.102, 0.0040, 0.0, 0.022, 0.011,
						0.047, 0.233, 0.109, 0.0, 0.058, 0.215, 0.015, 0.069, 0.0040, 0.0, 0.0, 0.0040, 0.0040 },
				{ 0.0, 0.092, 0.0, 0.0040, 0.0040, 0.04, 0.0, 0.0, 0.08, 0.012, 0.0, 0.0, 0.0080, 0.0, 0.0, 0.104,
						0.281, 0.0, 0.116, 0.209, 0.036, 0.0040, 0.0040, 0.0040, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.023, 0.0030, 0.0020, 0.0, 0.135, 0.0020, 0.0020, 0.0030, 0.097, 0.0, 0.0, 0.0080, 0.014, 0.011,
						0.015, 0.0, 0.0, 0.201, 0.415, 0.044, 0.011, 0.0, 0.0020, 0.0, 0.015, 0.0 },
				{ 0.0, 0.025, 0.0020, 0.013, 0.038, 0.078, 0.0, 0.0020, 0.095, 0.191, 0.0, 0.0040, 0.0040, 0.019, 0.013,
						0.0060, 0.0020, 0.0, 0.0020, 0.388, 0.093, 0.013, 0.0, 0.0020, 0.0, 0.013, 0.0 },
				{ 0.0, 0.051, 0.0, 0.0, 0.0040, 0.086, 0.0010, 0.013, 0.032, 0.078, 0.0010, 0.0, 0.0080, 0.0040, 0.0010,
						0.03, 0.0010, 0.0, 0.071, 0.348, 0.241, 0.014, 0.0, 0.0070, 0.0, 0.0080, 0.0 },
				{ 0.0, 0.075, 0.0, 0.015, 0.0, 0.045, 0.0, 0.0, 0.0050, 0.121, 0.0050, 0.0050, 0.015, 0.015, 0.045,
						0.0050, 0.015, 0.0, 0.246, 0.095, 0.136, 0.131, 0.0, 0.0, 0.01, 0.015, 0.0 },
				{ 0.0, 0.0, 0.034, 0.0, 0.0, 0.621, 0.0, 0.0, 0.0, 0.172, 0.0, 0.0, 0.017, 0.0, 0.017, 0.0, 0.017, 0.0,
						0.0, 0.0, 0.0, 0.017, 0.086, 0.017, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.03, 0.303, 0.0, 0.0, 0.03, 0.03, 0.0, 0.03, 0.03, 0.0, 0.061, 0.0, 0.0, 0.03,
						0.03, 0.242, 0.0, 0.061, 0.0, 0.121, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.545, 0.0, 0.03, 0.0, 0.0, 0.182, 0.03, 0.0, 0.0, 0.0, 0.03, 0.0, 0.091, 0.0, 0.0,
						0.0, 0.061, 0.0, 0.0, 0.0, 0.0, 0.03, 0.0, 0.0 },
				{ 0.0, 0.069, 0.014, 0.028, 0.0, 0.042, 0.0, 0.0, 0.0, 0.028, 0.0, 0.0, 0.014, 0.014, 0.083, 0.0, 0.0,
						0.0, 0.014, 0.458, 0.014, 0.181, 0.0, 0.014, 0.0, 0.028, 0.0 },
				{ 0.0, 0.1, 0.0, 0.0, 0.0, 0.25, 0.05, 0.0, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.2 },
				{ 0.0, 0.207, 0.036, 0.041, 0.036, 0.117, 0.05, 0.063, 0.014, 0.023, 0.0050, 0.077, 0.023, 0.027,
						0.0090, 0.0090, 0.045, 0.0, 0.027, 0.104, 0.0090, 0.05, 0.0050, 0.0090, 0.0050, 0.0050,
						0.0090 } };

		return addProb[i][j];

	}

	public double addScore(int i, int j) {

		if (i < 1 || i > 26 || j < 1 || j > 26)
			return 1;

		double additionScore[][] = {
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.025, 0.382, 0.027, 0.055, 0.038, 1.0, 0.382, 0.382, 0.012, 0.382, 0.096, 0.012, 0.191, 0.01,
						0.032, 0.096, 0.127, 0.014, 0.0030, 0.055, 0.014, 1.0, 0.382, 0.382, 0.096, 0.382 },
				{ 0.0, 0.038, 0.01, 1.0, 1.0, 0.016, 1.0, 0.113, 1.0, 0.0020, 1.0, 1.0, 0.0080, 1.0, 0.113, 0.113, 1.0,
						1.0, 0.023, 0.0070, 1.0, 1.0, 0.038, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.012, 1.0, 0.0040, 0.221, 0.017, 1.0, 1.0, 0.012, 0.0040, 1.0, 0.074, 0.221, 0.221, 0.221,
						0.032, 0.221, 1.0, 0.032, 0.0090, 0.032, 0.028, 0.055, 1.0, 0.221, 1.0, 1.0 },
				{ 0.0, 0.012, 1.0, 0.074, 0.013, 0.016, 0.111, 1.0, 1.0, 0.025, 1.0, 1.0, 0.037, 0.222, 0.025, 0.017,
						1.0, 1.0, 0.037, 0.0020, 1.0, 1.0, 1.0, 1.0, 1.0, 0.044, 1.0 },
				{ 0.0, 0.022, 0.428, 0.107, 0.011, 0.0060, 0.428, 1.0, 0.856, 0.214, 1.0, 0.285, 0.214, 0.143, 0.032,
						0.171, 0.856, 1.0, 0.01, 0.0020, 0.143, 0.214, 0.856, 0.086, 0.428, 0.107, 1.0 },
				{ 0.0, 0.83, 1.0, 1.0, 1.0, 0.415, 0.031, 0.83, 1.0, 0.069, 1.0, 1.0, 0.083, 1.0, 1.0, 1.0, 1.0, 1.0,
						0.166, 0.036, 1.0, 0.83, 1.0, 1.0, 1.0, 0.83, 1.0 },
				{ 0.0, 0.016, 1.0, 1.0, 1.0, 0.025, 0.124, 0.025, 0.01, 0.016, 1.0, 1.0, 0.062, 1.0, 0.124, 0.124, 1.0,
						0.124, 0.025, 0.0020, 0.062, 0.041, 1.0, 0.124, 1.0, 1.0, 1.0 },
				{ 0.0, 0.039, 0.154, 1.0, 0.154, 0.0060, 1.0, 0.015, 0.0090, 0.0090, 0.077, 1.0, 0.154, 1.0, 0.154,
						0.039, 1.0, 1.0, 0.01, 0.0060, 0.0070, 0.154, 1.0, 0.031, 1.0, 0.051, 1.0 },
				{ 0.0, 0.031, 0.103, 0.024, 0.024, 0.012, 1.0, 0.308, 0.308, 0.0040, 0.154, 0.308, 0.018, 0.028, 0.0090,
						0.011, 0.308, 1.0, 0.034, 0.01, 0.011, 0.028, 1.0, 1.0, 0.308, 1.0, 0.308 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.062, 0.031, 1.0, 0.123, 0.014, 1.0, 1.0, 0.123, 0.123, 1.0, 0.123, 0.123, 1.0, 1.0, 0.062,
						0.123, 1.0, 1.0, 0.0010, 1.0, 0.123, 1.0, 1.0, 1.0, 0.031, 1.0 },
				{ 0.0, 0.123, 0.37, 1.0, 0.37, 0.01, 1.0, 1.0, 1.0, 0.0050, 1.0, 0.185, 0.0030, 0.37, 1.0, 0.053, 1.0,
						1.0, 1.0, 0.0040, 0.053, 0.123, 0.37, 1.0, 1.0, 0.185, 1.0 },
				{ 0.0, 0.022, 0.244, 0.244, 1.0, 0.014, 1.0, 1.0, 0.244, 0.041, 1.0, 0.244, 1.0, 0.0020, 0.0060, 0.035,
						0.122, 1.0, 1.0, 0.0050, 0.244, 0.122, 1.0, 0.244, 1.0, 1.0, 1.0 },
				{ 0.0, 0.033, 1.0, 0.071, 0.038, 0.01, 0.125, 0.029, 1.0, 0.015, 1.0, 0.5, 0.5, 0.019, 0.0050, 0.042,
						1.0, 1.0, 0.25, 0.0030, 0.0090, 0.5, 0.5, 1.0, 1.0, 0.5, 1.0 },
				{ 0.0, 0.02, 0.275, 0.275, 0.092, 0.039, 0.138, 0.275, 1.0, 0.01, 0.275, 1.0, 0.046, 0.092, 0.021,
						0.0040, 0.0090, 1.0, 0.017, 0.0050, 0.069, 0.014, 0.275, 1.0, 1.0, 0.275, 0.275 },
				{ 0.0, 0.011, 1.0, 0.249, 0.249, 0.025, 1.0, 1.0, 0.012, 0.083, 1.0, 1.0, 0.124, 1.0, 1.0, 0.01, 0.0040,
						1.0, 0.0090, 0.0050, 0.028, 0.249, 0.249, 0.249, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.044, 0.329, 0.658, 1.0, 0.0070, 0.658, 0.658, 0.329, 0.01, 1.0, 1.0, 0.132, 0.073, 0.094,
						0.066, 1.0, 1.0, 0.0050, 0.0020, 0.023, 0.094, 1.0, 0.658, 1.0, 0.066, 1.0 },
				{ 0.0, 0.041, 0.529, 0.076, 0.026, 0.013, 1.0, 0.529, 0.011, 0.0050, 1.0, 0.265, 0.265, 0.053, 0.076,
						0.176, 0.529, 1.0, 0.529, 0.0030, 0.011, 0.076, 1.0, 0.529, 1.0, 0.076, 1.0 },
				{ 0.0, 0.019, 1.0, 1.0, 0.253, 0.012, 0.759, 0.076, 0.032, 0.013, 0.759, 1.0, 0.127, 0.253, 0.759,
						0.033, 0.759, 1.0, 0.014, 0.0030, 0.0040, 0.069, 1.0, 0.152, 1.0, 0.127, 1.0 },
				{ 0.0, 0.013, 1.0, 0.066, 1.0, 0.022, 1.0, 1.0, 0.199, 0.0080, 0.199, 0.199, 0.066, 0.066, 0.022, 0.199,
						0.066, 1.0, 0.0040, 0.01, 0.0070, 0.0080, 1.0, 1.0, 0.099, 0.066, 1.0 },
				{ 0.0, 1.0, 0.29, 1.0, 1.0, 0.016, 1.0, 1.0, 1.0, 0.058, 1.0, 1.0, 0.58, 1.0, 0.58, 1.0, 0.58, 1.0, 1.0,
						1.0, 1.0, 0.58, 0.116, 0.58, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 0.33, 0.033, 1.0, 1.0, 0.33, 0.33, 1.0, 0.33, 0.33, 1.0, 0.165, 1.0, 1.0, 0.33,
						0.33, 0.041, 1.0, 0.165, 1.0, 0.082, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 0.018, 1.0, 0.33, 1.0, 1.0, 0.055, 0.33, 1.0, 1.0, 1.0, 0.33, 1.0, 0.11, 1.0, 1.0, 1.0,
						0.165, 1.0, 1.0, 1.0, 1.0, 0.33, 1.0, 1.0 },
				{ 0.0, 0.144, 0.72, 0.36, 1.0, 0.24, 1.0, 1.0, 1.0, 0.36, 1.0, 1.0, 0.72, 0.72, 0.12, 1.0, 1.0, 1.0,
						0.72, 0.022, 0.72, 0.055, 1.0, 0.72, 1.0, 0.36, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 0.04, 0.2, 1.0, 1.0, 0.033, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.05 },
				{ 0.0, 0.0050, 0.028, 0.025, 0.028, 0.0090, 0.02, 0.016, 0.074, 0.044, 0.222, 0.013, 0.044, 0.037,
						0.111, 0.111, 0.022, 1.0, 0.037, 0.01, 0.111, 0.02, 0.222, 0.111, 0.222, 0.222, 0.111 } };

		return additionScore[i][j];

	}

	public void confusionMatrixDel() {

		double del[][] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 7, 58, 21, 3, 5, 18, 8, 61, 0, 4, 43, 5, 53, 0, 9, 0, 98, 28, 53, 62, 1, 0, 0, 2, 0 },
				{ 0, 2, 2, 1, 0, 22, 0, 0, 0, 183, 0, 0, 26, 0, 0, 2, 0, 0, 6, 17, 0, 6, 1, 0, 0, 0, 0 },
				{ 0, 37, 0, 70, 0, 63, 0, 0, 24, 320, 0, 9, 17, 0, 0, 33, 0, 0, 46, 6, 54, 17, 0, 0, 0, 1, 0 },
				{ 0, 12, 0, 7, 25, 45, 0, 10, 0, 62, 1, 1, 8, 4, 3, 3, 0, 0, 11, 1, 0, 3, 2, 0, 0, 6, 0 },
				{ 0, 80, 1, 50, 74, 89, 3, 1, 1, 6, 0, 0, 32, 9, 76, 19, 9, 1, 237, 223, 34, 8, 2, 1, 7, 1, 0 },
				{ 0, 4, 0, 0, 0, 13, 46, 0, 0, 79, 0, 0, 12, 0, 0, 4, 0, 0, 11, 0, 8, 1, 0, 0, 0, 1, 0 },
				{ 0, 25, 0, 0, 2, 83, 1, 37, 25, 39, 0, 0, 3, 0, 29, 4, 0, 0, 52, 7, 1, 22, 0, 0, 0, 1, 0 },
				{ 0, 15, 12, 1, 3, 20, 0, 0, 25, 24, 0, 0, 7, 1, 9, 22, 0, 0, 15, 1, 26, 0, 0, 1, 0, 1, 0 },
				{ 0, 26, 1, 60, 26, 23, 1, 9, 0, 1, 0, 0, 38, 14, 82, 41, 7, 0, 16, 71, 64, 1, 1, 0, 0, 1, 7 },
				{ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
				{ 0, 4, 0, 0, 1, 15, 1, 8, 1, 5, 0, 1, 3, 0, 17, 0, 0, 0, 1, 5, 0, 0, 0, 1, 0, 0, 0 },
				{ 0, 24, 0, 1, 6, 48, 0, 0, 0, 217, 0, 0, 211, 2, 0, 29, 0, 0, 2, 12, 7, 3, 2, 0, 0, 11, 0 },
				{ 0, 15, 10, 0, 0, 33, 0, 0, 1, 42, 0, 0, 0, 180, 7, 7, 31, 0, 0, 9, 0, 4, 0, 0, 0, 0, 0 },
				{ 0, 21, 0, 42, 71, 68, 1, 160, 0, 191, 0, 0, 0, 17, 144, 21, 0, 0, 0, 127, 87, 43, 1, 1, 0, 2, 0 },
				{ 0, 11, 4, 3, 6, 8, 0, 5, 0, 4, 1, 0, 13, 9, 70, 26, 20, 0, 98, 20, 13, 47, 2, 5, 0, 1, 0 },
				{ 0, 25, 0, 0, 0, 22, 0, 0, 12, 15, 0, 0, 28, 1, 0, 30, 93, 0, 58, 1, 18, 2, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0 },
				{ 0, 63, 4, 12, 19, 188, 0, 11, 5, 132, 0, 3, 33, 7, 157, 21, 2, 0, 277, 103, 68, 0, 10, 1, 0, 27, 0 },
				{ 0, 16, 0, 27, 0, 74, 1, 0, 18, 231, 0, 0, 2, 1, 0, 30, 30, 0, 4, 265, 124, 21, 0, 0, 0, 1, 0 },
				{ 0, 24, 1, 2, 0, 76, 1, 7, 49, 427, 0, 0, 31, 3, 3, 11, 1, 0, 203, 5, 137, 14, 0, 4, 0, 2, 0 },
				{ 0, 26, 6, 9, 10, 15, 0, 1, 0, 28, 0, 0, 39, 2, 111, 1, 0, 0, 129, 31, 66, 0, 0, 0, 0, 1, 0 },
				{ 0, 9, 0, 0, 0, 58, 0, 0, 0, 31, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0 },
				{ 0, 40, 0, 0, 1, 11, 1, 0, 11, 15, 0, 0, 1, 0, 2, 2, 0, 0, 2, 24, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 1, 0, 17, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 0, 0, 1, 0 },
				{ 0, 2, 1, 34, 0, 2, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 1, 0, 0, 17, 1, 0, 0, 1, 0, 0, 0 },
				{ 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 },
				{ 0, 20, 14, 41, 31, 20, 20, 7, 6, 20, 3, 6, 22, 16, 5, 5, 17, 0, 28, 26, 6, 2, 1, 24, 0, 0, 2 } };

	}

	public double delProbability(int i, int j) {

		if (i < 1 || i > 26 || j < 1 || j > 26)
			return 0;

		double delProb[][] = {
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.013, 0.108, 0.039, 0.0060, 0.0090, 0.033, 0.015, 0.113, 0.0, 0.0070, 0.08, 0.0090, 0.098,
						0.0, 0.017, 0.0, 0.182, 0.052, 0.098, 0.115, 0.0020, 0.0, 0.0, 0.0040, 0.0 },
				{ 0.0, 0.0070, 0.0070, 0.0040, 0.0, 0.082, 0.0, 0.0, 0.0, 0.683, 0.0, 0.0, 0.097, 0.0, 0.0, 0.0070, 0.0,
						0.0, 0.022, 0.063, 0.0, 0.022, 0.0040, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.053, 0.0, 0.1, 0.0, 0.09, 0.0, 0.0, 0.034, 0.459, 0.0, 0.013, 0.024, 0.0, 0.0, 0.047, 0.0, 0.0,
						0.066, 0.0090, 0.077, 0.024, 0.0, 0.0, 0.0, 0.0010, 0.0 },
				{ 0.0, 0.059, 0.0, 0.034, 0.123, 0.221, 0.0, 0.049, 0.0, 0.304, 0.0050, 0.0050, 0.039, 0.02, 0.015,
						0.015, 0.0, 0.0, 0.054, 0.0050, 0.0, 0.015, 0.01, 0.0, 0.0, 0.029, 0.0 },
				{ 0.0, 0.083, 0.0010, 0.052, 0.077, 0.092, 0.0030, 0.0010, 0.0010, 0.0060, 0.0, 0.0, 0.033, 0.0090,
						0.079, 0.02, 0.0090, 0.0010, 0.246, 0.231, 0.035, 0.0080, 0.0020, 0.0010, 0.0070, 0.0010, 0.0 },
				{ 0.0, 0.022, 0.0, 0.0, 0.0, 0.073, 0.257, 0.0, 0.0, 0.441, 0.0, 0.0, 0.067, 0.0, 0.0, 0.022, 0.0, 0.0,
						0.061, 0.0, 0.045, 0.0060, 0.0, 0.0, 0.0, 0.0060, 0.0 },
				{ 0.0, 0.076, 0.0, 0.0, 0.0060, 0.251, 0.0030, 0.112, 0.076, 0.118, 0.0, 0.0, 0.0090, 0.0, 0.088, 0.012,
						0.0, 0.0, 0.157, 0.021, 0.0030, 0.066, 0.0, 0.0, 0.0, 0.0030, 0.0 },
				{ 0.0, 0.082, 0.066, 0.0050, 0.016, 0.109, 0.0, 0.0, 0.137, 0.131, 0.0, 0.0, 0.038, 0.0050, 0.049, 0.12,
						0.0, 0.0, 0.082, 0.0050, 0.142, 0.0, 0.0, 0.0050, 0.0, 0.0050, 0.0 },
				{ 0.0, 0.053, 0.0020, 0.122, 0.053, 0.047, 0.0020, 0.018, 0.0, 0.0020, 0.0, 0.0, 0.078, 0.029, 0.167,
						0.084, 0.014, 0.0, 0.033, 0.145, 0.131, 0.0020, 0.0020, 0.0, 0.0, 0.0020, 0.014 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.25, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.063, 0.0, 0.0, 0.016, 0.238, 0.016, 0.127, 0.016, 0.079, 0.0, 0.016, 0.048, 0.0, 0.27, 0.0,
						0.0, 0.0, 0.016, 0.079, 0.0, 0.0, 0.0, 0.016, 0.0, 0.0, 0.0 },
				{ 0.0, 0.042, 0.0, 0.0020, 0.01, 0.083, 0.0, 0.0, 0.0, 0.377, 0.0, 0.0, 0.367, 0.0030, 0.0, 0.05, 0.0,
						0.0, 0.0030, 0.021, 0.012, 0.0050, 0.0030, 0.0, 0.0, 0.019, 0.0 },
				{ 0.0, 0.044, 0.029, 0.0, 0.0, 0.097, 0.0, 0.0, 0.0030, 0.124, 0.0, 0.0, 0.0, 0.531, 0.021, 0.021,
						0.091, 0.0, 0.0, 0.027, 0.0, 0.012, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.021, 0.0, 0.042, 0.071, 0.068, 0.0010, 0.16, 0.0, 0.192, 0.0, 0.0, 0.0, 0.017, 0.144, 0.021,
						0.0, 0.0, 0.0, 0.127, 0.087, 0.043, 0.0010, 0.0010, 0.0, 0.0020, 0.0 },
				{ 0.0, 0.03, 0.011, 0.0080, 0.016, 0.022, 0.0, 0.014, 0.0, 0.011, 0.0030, 0.0, 0.036, 0.025, 0.191,
						0.071, 0.055, 0.0, 0.268, 0.055, 0.036, 0.128, 0.0050, 0.014, 0.0, 0.0030, 0.0 },
				{ 0.0, 0.082, 0.0, 0.0, 0.0, 0.072, 0.0, 0.0, 0.039, 0.049, 0.0, 0.0, 0.092, 0.0030, 0.0, 0.098, 0.305,
						0.0, 0.19, 0.0030, 0.059, 0.0070, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.055, 0.0030, 0.01, 0.017, 0.164, 0.0, 0.01, 0.0040, 0.115, 0.0, 0.0030, 0.029, 0.0060, 0.137,
						0.018, 0.0020, 0.0, 0.242, 0.09, 0.059, 0.0, 0.0090, 0.0010, 0.0, 0.024, 0.0 },
				{ 0.0, 0.019, 0.0, 0.032, 0.0, 0.088, 0.0010, 0.0, 0.021, 0.273, 0.0, 0.0, 0.0020, 0.0010, 0.0, 0.036,
						0.036, 0.0, 0.0050, 0.314, 0.147, 0.025, 0.0, 0.0, 0.0, 0.0010, 0.0 },
				{ 0.0, 0.024, 0.0010, 0.0020, 0.0, 0.076, 0.0010, 0.0070, 0.049, 0.427, 0.0, 0.0, 0.031, 0.0030, 0.0030,
						0.011, 0.0010, 0.0, 0.203, 0.0050, 0.137, 0.014, 0.0, 0.0040, 0.0, 0.0020, 0.0 },
				{ 0.0, 0.055, 0.013, 0.019, 0.021, 0.032, 0.0, 0.0020, 0.0, 0.059, 0.0, 0.0, 0.082, 0.0040, 0.234,
						0.0020, 0.0, 0.0, 0.272, 0.065, 0.139, 0.0, 0.0, 0.0, 0.0, 0.0020, 0.0 },
				{ 0.0, 0.088, 0.0, 0.0, 0.0, 0.569, 0.0, 0.0, 0.0, 0.304, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.0, 0.0, 0.01,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0 },
				{ 0.0, 0.364, 0.0, 0.0, 0.0090, 0.1, 0.0090, 0.0, 0.1, 0.136, 0.0, 0.0, 0.0090, 0.0, 0.018, 0.018, 0.0,
						0.0, 0.018, 0.218, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.029, 0.0, 0.5, 0.0, 0.088, 0.0, 0.0, 0.029, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.176, 0.0, 0.0,
						0.0, 0.147, 0.0, 0.0, 0.0, 0.0, 0.029, 0.0 },
				{ 0.0, 0.03, 0.015, 0.515, 0.0, 0.03, 0.0, 0.015, 0.0, 0.015, 0.0, 0.0, 0.015, 0.03, 0.015, 0.015,
						0.015, 0.0, 0.0, 0.258, 0.015, 0.0, 0.0, 0.015, 0.0, 0.0, 0.0 },
				{ 0.0, 0.2, 0.0, 0.0, 0.0, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4 },
				{ 0.0, 0.058, 0.041, 0.12, 0.091, 0.058, 0.058, 0.02, 0.018, 0.058, 0.0090, 0.018, 0.064, 0.047, 0.015,
						0.015, 0.05, 0.0, 0.082, 0.076, 0.018, 0.0060, 0.0030, 0.07, 0.0, 0.0, 0.0060 } };

		return delProb[i][j];

	}

	public double delScore(int i, int j) {

		if (i < 1 || i > 26 || j < 1 || j > 26)
			return 1;

		double deleteScore[][] = {
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 1.0, 0.077, 0.0090, 0.026, 0.18, 0.108, 0.03, 0.067, 0.0090, 1.0, 0.135, 0.013, 0.108, 0.01, 1.0,
						0.06, 1.0, 0.0060, 0.019, 0.01, 0.0090, 0.539, 1.0, 1.0, 0.269, 1.0 },
				{ 0.0, 0.134, 0.134, 0.268, 1.0, 0.012, 1.0, 1.0, 1.0, 0.0010, 1.0, 1.0, 0.01, 1.0, 1.0, 0.134, 1.0,
						1.0, 0.045, 0.016, 1.0, 0.045, 0.268, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.019, 1.0, 0.01, 1.0, 0.011, 1.0, 1.0, 0.029, 0.0020, 1.0, 0.077, 0.041, 1.0, 1.0, 0.021, 1.0,
						1.0, 0.015, 0.116, 0.013, 0.041, 1.0, 1.0, 1.0, 0.697, 1.0 },
				{ 0.0, 0.017, 1.0, 0.029, 0.0080, 0.0050, 1.0, 0.02, 1.0, 0.0030, 0.204, 0.204, 0.026, 0.051, 0.068,
						0.068, 1.0, 1.0, 0.019, 0.204, 1.0, 0.068, 0.102, 1.0, 1.0, 0.034, 1.0 },
				{ 0.0, 0.012, 0.964, 0.019, 0.013, 0.011, 0.321, 0.964, 0.964, 0.161, 1.0, 1.0, 0.03, 0.107, 0.013,
						0.051, 0.107, 0.964, 0.0040, 0.0040, 0.028, 0.121, 0.482, 0.964, 0.138, 0.964, 1.0 },
				{ 0.0, 0.045, 1.0, 1.0, 1.0, 0.014, 0.0040, 1.0, 1.0, 0.0020, 1.0, 1.0, 0.015, 1.0, 1.0, 0.045, 1.0,
						1.0, 0.016, 1.0, 0.022, 0.179, 1.0, 1.0, 1.0, 0.179, 1.0 },
				{ 0.0, 0.013, 1.0, 1.0, 0.166, 0.0040, 0.331, 0.0090, 0.013, 0.0080, 1.0, 1.0, 0.11, 1.0, 0.011, 0.083,
						1.0, 1.0, 0.0060, 0.047, 0.331, 0.015, 1.0, 1.0, 1.0, 0.331, 1.0 },
				{ 0.0, 0.012, 0.015, 0.183, 0.061, 0.0090, 1.0, 1.0, 0.0070, 0.0080, 1.0, 1.0, 0.026, 0.183, 0.02,
						0.0080, 1.0, 1.0, 0.012, 0.183, 0.0070, 1.0, 1.0, 0.183, 1.0, 0.183, 1.0 },
				{ 0.0, 0.019, 0.49, 0.0080, 0.019, 0.021, 0.49, 0.054, 1.0, 0.49, 1.0, 1.0, 0.013, 0.035, 0.0060, 0.012,
						0.07, 1.0, 0.031, 0.0070, 0.0080, 0.49, 0.49, 1.0, 1.0, 0.49, 0.07 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 0.4, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.4, 0.4, 1.0, 1.0, 1.0, 1.0,
						1.0, 0.4, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.158, 1.0, 1.0, 0.63, 0.042, 0.63, 0.079, 0.63, 0.126, 1.0, 0.63, 0.21, 1.0, 0.037, 1.0, 1.0,
						1.0, 0.63, 0.126, 1.0, 1.0, 1.0, 0.63, 1.0, 1.0, 1.0 },
				{ 0.0, 0.024, 1.0, 0.575, 0.096, 0.012, 1.0, 1.0, 1.0, 0.0030, 1.0, 1.0, 0.0030, 0.288, 1.0, 0.02, 1.0,
						1.0, 0.288, 0.048, 0.082, 0.192, 0.288, 1.0, 1.0, 0.052, 1.0 },
				{ 0.0, 0.023, 0.034, 1.0, 1.0, 0.01, 1.0, 1.0, 0.339, 0.0080, 1.0, 1.0, 1.0, 0.0020, 0.048, 0.048,
						0.011, 1.0, 1.0, 0.038, 1.0, 0.085, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.047, 1.0, 0.024, 0.014, 0.015, 0.997, 0.0060, 1.0, 0.0050, 1.0, 1.0, 1.0, 0.059, 0.0070, 0.047,
						1.0, 1.0, 1.0, 0.0080, 0.011, 0.023, 0.997, 0.997, 1.0, 0.499, 1.0 },
				{ 0.0, 0.033, 0.092, 0.122, 0.061, 0.046, 1.0, 0.073, 1.0, 0.092, 0.366, 1.0, 0.028, 0.041, 0.0050,
						0.014, 0.018, 1.0, 0.0040, 0.018, 0.028, 0.0080, 0.183, 0.073, 1.0, 0.366, 1.0 },
				{ 0.0, 0.012, 1.0, 1.0, 1.0, 0.014, 1.0, 1.0, 0.025, 0.02, 1.0, 1.0, 0.011, 0.305, 1.0, 0.01, 0.0030,
						1.0, 0.0050, 0.305, 0.017, 0.153, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.0020, 0.029, 0.01, 0.0060, 0.0010, 1.0, 0.01, 0.023, 0.0010, 1.0, 0.038, 0.0030, 0.016, 0.0010,
						0.0050, 0.057, 1.0, 0.0, 0.0010, 0.0020, 1.0, 0.011, 0.114, 1.0, 0.0040, 1.0 },
				{ 0.0, 0.053, 1.0, 0.031, 1.0, 0.011, 0.845, 1.0, 0.047, 0.0040, 1.0, 1.0, 0.423, 0.845, 1.0, 0.028,
						0.028, 1.0, 0.211, 0.0030, 0.0070, 0.04, 1.0, 1.0, 1.0, 0.845, 1.0 },
				{ 0.0, 0.0040, 0.1, 0.05, 1.0, 0.0010, 0.1, 0.014, 0.0020, 0.0, 1.0, 1.0, 0.0030, 0.033, 0.033, 0.0090,
						0.1, 1.0, 0.0, 0.02, 0.0010, 0.0070, 1.0, 0.025, 1.0, 0.05, 1.0 },
				{ 0.0, 0.018, 0.079, 0.053, 0.048, 0.032, 1.0, 0.475, 1.0, 0.017, 1.0, 1.0, 0.012, 0.238, 0.0040, 0.475,
						1.0, 1.0, 0.0040, 0.015, 0.0070, 1.0, 1.0, 1.0, 1.0, 0.475, 1.0 },
				{ 0.0, 0.011, 1.0, 1.0, 1.0, 0.0020, 1.0, 1.0, 1.0, 0.0030, 1.0, 1.0, 1.0, 1.0, 1.0, 0.051, 1.0, 1.0,
						0.102, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.102, 1.0 },
				{ 0.0, 0.0030, 1.0, 1.0, 0.11, 0.01, 0.11, 1.0, 0.01, 0.0070, 1.0, 1.0, 0.11, 1.0, 0.055, 0.055, 1.0,
						1.0, 0.055, 0.0050, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.34, 1.0, 0.02, 1.0, 0.113, 1.0, 1.0, 0.34, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.057, 1.0, 1.0,
						1.0, 0.068, 1.0, 1.0, 1.0, 1.0, 0.34, 1.0 },
				{ 0.0, 0.33, 0.66, 0.019, 1.0, 0.33, 1.0, 0.66, 1.0, 0.66, 1.0, 1.0, 0.66, 0.33, 0.66, 0.66, 0.66, 1.0,
						1.0, 0.039, 0.66, 1.0, 1.0, 0.66, 1.0, 1.0, 1.0 },
				{ 0.0, 0.5, 1.0, 1.0, 1.0, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.25 },
				{ 0.0, 0.017, 0.024, 0.0080, 0.011, 0.017, 0.017, 0.049, 0.057, 0.017, 0.114, 0.057, 0.016, 0.021,
						0.068, 0.068, 0.02, 1.0, 0.012, 0.013, 0.057, 0.171, 0.342, 0.014, 1.0, 1.0, 0.171 } };

		return deleteScore[i][j];

	}

	public void confusionMatrixRev() {

		double rev[][] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 2, 1, 1, 0, 0, 0, 19, 0, 1, 14, 4, 25, 10, 3, 0, 27, 3, 5, 31, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 1, 0, 0, 1, 85, 0, 0, 15, 0, 0, 13, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0 },
				{ 0, 1, 0, 4, 5, 0, 0, 0, 0, 60, 0, 0, 21, 6, 16, 11, 2, 0, 29, 5, 0, 85, 0, 0, 0, 2, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 15, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0 },
				{ 0, 12, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0 },
				{ 0, 15, 8, 31, 3, 66, 1, 3, 0, 0, 0, 0, 9, 0, 5, 11, 0, 1, 13, 42, 35, 0, 6, 0, 0, 0, 3 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 11, 0, 0, 12, 20, 0, 1, 0, 4, 0, 0, 0, 0, 0, 1, 3, 0, 0, 1, 1, 3, 9, 0, 0, 7, 0 },
				{ 0, 9, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0 },
				{ 0, 15, 0, 6, 2, 12, 0, 8, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 6, 4, 0, 0, 0, 0, 0, 0 },
				{ 0, 5, 0, 2, 0, 4, 0, 0, 0, 5, 0, 0, 1, 0, 5, 0, 1, 0, 11, 1, 1, 0, 0, 7, 1, 0, 0 },
				{ 0, 17, 0, 0, 0, 4, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 3, 6, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 12, 0, 0, 0, 24, 0, 3, 0, 14, 0, 2, 2, 0, 7, 30, 1, 0, 0, 0, 2, 10, 0, 0, 0, 2, 0 },
				{ 0, 4, 0, 0, 0, 9, 0, 0, 5, 15, 0, 0, 5, 2, 0, 1, 22, 0, 0, 0, 1, 3, 0, 0, 0, 16, 0 },
				{ 0, 4, 0, 3, 0, 4, 0, 0, 21, 49, 0, 0, 4, 0, 0, 3, 0, 0, 5, 0, 0, 11, 0, 2, 0, 0, 0 },
				{ 0, 22, 0, 5, 1, 1, 0, 2, 0, 2, 0, 0, 2, 1, 0, 20, 2, 0, 11, 11, 2, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 2, 0, 1, 10, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

	}

	public double revProbability(int i, int j) {

		if (i < 1 || i > 26 || j < 1 || j > 26)
			return 0;

		double revProb[][] = {
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.014, 0.0070, 0.0070, 0.0, 0.0, 0.0, 0.13, 0.0, 0.0070, 0.096, 0.027, 0.171, 0.068,
						0.021, 0.0, 0.185, 0.021, 0.034, 0.212, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125, 0.125, 0.0, 0.25, 0.0, 0.0, 0.0,
						0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0080, 0.0, 0.0, 0.0080, 0.68, 0.0, 0.0, 0.12, 0.0, 0.0, 0.104, 0.0, 0.0,
						0.0, 0.024, 0.0, 0.056, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0,
						0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0040, 0.0, 0.016, 0.02, 0.0, 0.0, 0.0, 0.0, 0.243, 0.0, 0.0, 0.085, 0.024, 0.065, 0.045,
						0.0080, 0.0, 0.117, 0.02, 0.0, 0.344, 0.0, 0.0, 0.0, 0.0080, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.923, 0.0, 0.0, 0.077, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.143, 0.0, 0.0, 0.0, 0.071, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.036, 0.0, 0.536, 0.0, 0.0, 0.0,
						0.107, 0.0, 0.0, 0.107, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.324, 0.0, 0.0, 0.0, 0.405, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.27, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.06, 0.032, 0.123, 0.012, 0.262, 0.0040, 0.012, 0.0, 0.0, 0.0, 0.0, 0.036, 0.0, 0.02, 0.044,
						0.0, 0.0040, 0.052, 0.167, 0.139, 0.0, 0.024, 0.0, 0.0, 0.0, 0.012 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.151, 0.0, 0.0, 0.164, 0.274, 0.0, 0.014, 0.0, 0.055, 0.0, 0.0, 0.0, 0.0, 0.0, 0.014, 0.041,
						0.0, 0.0, 0.014, 0.014, 0.041, 0.123, 0.0, 0.0, 0.096, 0.0 },
				{ 0.0, 0.257, 0.0, 0.0, 0.0, 0.571, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.057, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.114, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.263, 0.0, 0.105, 0.035, 0.211, 0.0, 0.14, 0.0, 0.018, 0.0, 0.0, 0.0, 0.053, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.105, 0.07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.114, 0.0, 0.045, 0.0, 0.091, 0.0, 0.0, 0.0, 0.114, 0.0, 0.0, 0.023, 0.0, 0.114, 0.0, 0.023,
						0.0, 0.25, 0.023, 0.023, 0.0, 0.0, 0.159, 0.023, 0.0, 0.0 },
				{ 0.0, 0.459, 0.0, 0.0, 0.0, 0.108, 0.0, 0.0, 0.027, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.027, 0.0, 0.0,
						0.135, 0.081, 0.162, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.11, 0.0, 0.0, 0.0, 0.22, 0.0, 0.028, 0.0, 0.128, 0.0, 0.018, 0.018, 0.0, 0.064, 0.275, 0.0090,
						0.0, 0.0, 0.0, 0.018, 0.092, 0.0, 0.0, 0.0, 0.018, 0.0 },
				{ 0.0, 0.048, 0.0, 0.0, 0.0, 0.108, 0.0, 0.0, 0.06, 0.181, 0.0, 0.0, 0.06, 0.024, 0.0, 0.012, 0.265,
						0.0, 0.0, 0.0, 0.012, 0.036, 0.0, 0.0, 0.0, 0.193, 0.0 },
				{ 0.0, 0.038, 0.0, 0.028, 0.0, 0.038, 0.0, 0.0, 0.198, 0.462, 0.0, 0.0, 0.038, 0.0, 0.0, 0.028, 0.0,
						0.0, 0.047, 0.0, 0.0, 0.104, 0.0, 0.019, 0.0, 0.0, 0.0 },
				{ 0.0, 0.268, 0.0, 0.061, 0.012, 0.012, 0.0, 0.024, 0.0, 0.024, 0.0, 0.0, 0.024, 0.012, 0.0, 0.244,
						0.024, 0.0, 0.134, 0.134, 0.024, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.267, 0.0, 0.0, 0.0, 0.0, 0.067, 0.067, 0.067, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.533, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.05, 0.1, 0.0, 0.0, 0.0, 0.05, 0.0, 0.0, 0.0, 0.0, 0.15, 0.0, 0.0, 0.0, 0.1, 0.0, 0.05,
						0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 } };

		return revProb[i][j];

	}

	public double revScore(int i, int j) {

		if (i < 1 || i > 26 || j < 1 || j > 26)
			return 1;

		double reverseScore[][] = {
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 1.0, 1.0, 0.073, 0.146, 0.146, 1.0, 1.0, 1.0, 0.0080, 1.0, 0.146, 0.01, 0.037, 0.0060, 0.015,
						0.049, 1.0, 0.0050, 0.049, 0.029, 0.0050, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 0.4, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8, 0.8, 1.0, 0.4, 1.0, 1.0, 1.0, 0.4,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 0.125, 1.0, 1.0, 0.125, 0.0010, 1.0, 1.0, 0.0080, 1.0, 1.0, 0.01, 1.0, 1.0,
						1.0, 0.042, 1.0, 0.018, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.143, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.247, 1.0, 0.062, 0.049, 1.0, 1.0, 1.0, 1.0, 0.0040, 1.0, 1.0, 0.012, 0.041, 0.015, 0.022,
						0.123, 1.0, 0.0090, 0.049, 1.0, 0.0030, 1.0, 1.0, 1.0, 0.123, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.011, 1.0, 1.0, 0.13, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.07, 1.0, 1.0, 1.0, 0.14, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.28, 1.0, 0.019, 1.0, 1.0, 1.0, 0.093,
						1.0, 1.0, 0.093, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.308, 1.0, 1.0, 1.0, 0.247, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 0.37, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.017, 0.032, 0.0080, 0.084, 0.0040, 0.252, 0.084, 1.0, 1.0, 1.0, 1.0, 0.028, 1.0, 0.05, 0.023,
						1.0, 0.252, 0.019, 0.0060, 0.0070, 1.0, 0.042, 1.0, 1.0, 1.0, 0.084 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.066, 1.0, 1.0, 0.061, 0.037, 1.0, 0.73, 1.0, 0.183, 1.0, 1.0, 1.0, 1.0, 1.0, 0.73, 0.243, 1.0,
						1.0, 0.73, 0.73, 0.243, 0.081, 1.0, 1.0, 0.104, 1.0 },
				{ 0.0, 0.039, 1.0, 1.0, 1.0, 0.017, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.175, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 0.088, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.038, 1.0, 0.095, 0.285, 0.048, 1.0, 0.071, 1.0, 0.57, 1.0, 1.0, 1.0, 0.19, 1.0, 1.0, 1.0, 1.0,
						1.0, 0.095, 0.143, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.088, 1.0, 0.22, 1.0, 0.11, 1.0, 1.0, 1.0, 0.088, 1.0, 1.0, 0.44, 1.0, 0.088, 1.0, 0.44, 1.0,
						0.04, 0.44, 0.44, 1.0, 1.0, 0.063, 0.44, 1.0, 1.0 },
				{ 0.0, 0.022, 1.0, 1.0, 1.0, 0.093, 1.0, 1.0, 0.37, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.37, 1.0, 1.0, 0.074,
						0.123, 0.062, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.0090, 1.0, 1.0, 1.0, 0.0050, 1.0, 0.036, 1.0, 0.0080, 1.0, 0.055, 0.055, 1.0, 0.016, 0.0040,
						0.109, 1.0, 1.0, 1.0, 0.055, 0.011, 1.0, 1.0, 1.0, 0.055, 1.0 },
				{ 0.0, 0.208, 1.0, 1.0, 1.0, 0.092, 1.0, 1.0, 0.166, 0.055, 1.0, 1.0, 0.166, 0.415, 1.0, 0.83, 0.038,
						1.0, 1.0, 1.0, 0.83, 0.277, 1.0, 1.0, 1.0, 0.052, 1.0 },
				{ 0.0, 0.265, 1.0, 0.353, 1.0, 0.265, 1.0, 1.0, 0.05, 0.022, 1.0, 1.0, 0.265, 1.0, 1.0, 0.353, 1.0, 1.0,
						0.212, 1.0, 1.0, 0.096, 1.0, 0.53, 1.0, 1.0, 1.0 },
				{ 0.0, 0.037, 1.0, 0.164, 0.82, 0.82, 1.0, 0.41, 1.0, 0.41, 1.0, 1.0, 0.41, 0.82, 1.0, 0.041, 0.41, 1.0,
						0.075, 0.075, 0.41, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 0.125, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.038, 1.0, 1.0, 1.0, 1.0, 0.15, 0.15, 0.15, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.019, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 0.067, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.02,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 } };

		return reverseScore[i][j];

	}

	public void confusionMatrixSub() {

		double sub[][] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 7, 1, 342, 0, 0, 2, 118, 0, 1, 0, 0, 3, 76, 0, 0, 1, 35, 9, 9, 0, 1, 0, 5, 0 },
				{ 0, 0, 0, 9, 9, 2, 2, 3, 1, 0, 0, 0, 5, 11, 5, 0, 10, 0, 0, 2, 1, 0, 0, 8, 0, 0, 0 },
				{ 0, 6, 5, 0, 16, 0, 9, 5, 0, 0, 0, 1, 0, 7, 9, 1, 10, 2, 5, 39, 40, 1, 3, 7, 1, 1, 0 },
				{ 0, 1, 10, 13, 0, 12, 0, 5, 5, 0, 0, 2, 3, 7, 3, 0, 1, 0, 43, 30, 22, 0, 0, 4, 0, 2, 0 },
				{ 0, 388, 0, 3, 11, 0, 2, 2, 0, 89, 0, 0, 3, 0, 5, 93, 0, 0, 14, 12, 6, 15, 0, 1, 0, 18, 0 },
				{ 0, 0, 15, 0, 3, 1, 0, 5, 2, 0, 0, 0, 3, 4, 1, 0, 0, 0, 6, 4, 12, 0, 0, 2, 0, 0, 0 },
				{ 0, 4, 1, 11, 11, 9, 2, 0, 0, 0, 1, 1, 3, 0, 0, 2, 1, 3, 5, 13, 21, 0, 0, 1, 0, 3, 0 },
				{ 0, 1, 8, 0, 3, 0, 0, 0, 0, 0, 0, 2, 0, 12, 14, 2, 3, 0, 3, 1, 11, 0, 0, 2, 0, 0, 0 },
				{ 0, 103, 0, 0, 0, 146, 0, 1, 0, 0, 0, 0, 6, 0, 0, 49, 0, 0, 0, 2, 1, 47, 0, 2, 1, 15, 0 },
				{ 0, 0, 1, 1, 9, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 1, 2, 8, 4, 1, 1, 2, 5, 0, 0, 0, 0, 5, 0, 2, 0, 0, 0, 6, 0, 0, 0, 4, 0, 0, 3 },
				{ 0, 2, 10, 1, 4, 0, 4, 5, 6, 13, 0, 1, 0, 0, 14, 2, 5, 0, 11, 10, 2, 0, 0, 0, 0, 0, 0 },
				{ 0, 1, 3, 7, 8, 0, 2, 0, 6, 0, 0, 4, 4, 0, 180, 0, 6, 0, 0, 9, 15, 13, 3, 2, 2, 3, 0 },
				{ 0, 2, 7, 6, 5, 3, 0, 1, 19, 1, 0, 4, 35, 78, 0, 0, 7, 0, 28, 5, 7, 0, 0, 1, 2, 0, 2 },
				{ 0, 91, 1, 1, 3, 116, 0, 0, 0, 25, 0, 2, 0, 0, 0, 0, 14, 0, 2, 4, 14, 39, 0, 0, 0, 18, 0 },
				{ 0, 0, 11, 1, 2, 0, 6, 5, 0, 2, 9, 0, 2, 7, 6, 15, 0, 0, 1, 3, 6, 0, 4, 1, 0, 0, 0 },
				{ 0, 0, 0, 1, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 14, 0, 30, 12, 2, 2, 8, 2, 0, 5, 8, 4, 20, 1, 14, 0, 0, 12, 22, 4, 0, 0, 1, 0, 0 },
				{ 0, 11, 8, 27, 33, 35, 4, 0, 1, 0, 1, 0, 27, 0, 6, 1, 7, 0, 14, 0, 15, 0, 0, 5, 3, 20, 1 },
				{ 0, 3, 4, 9, 42, 7, 5, 19, 5, 0, 1, 0, 14, 9, 5, 5, 6, 0, 11, 37, 0, 0, 2, 19, 0, 7, 6 },
				{ 0, 20, 0, 0, 0, 44, 0, 0, 0, 64, 0, 0, 0, 0, 2, 43, 0, 0, 4, 0, 0, 0, 0, 2, 0, 8, 0 },
				{ 0, 0, 0, 7, 0, 0, 3, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 8, 3, 0, 0, 0, 0, 0, 0 },
				{ 0, 2, 2, 1, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 7, 0, 6, 3, 3, 1, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 2, 0, 15, 0, 1, 7, 15, 0, 0, 0, 2, 0, 6, 1, 0, 7, 36, 8, 5, 0, 0, 1, 0, 0 },
				{ 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 7, 5, 0, 0, 0, 0, 2, 21, 3, 0, 0, 0, 0, 3, 0 } };

	}

	public double subProbability(int i, int j) {

		if (i < 1 || i > 26 || j < 1 || j > 26)
			return 0;

		double subProb[][] = {
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.011, 0.0020, 0.561, 0.0, 0.0, 0.0030, 0.193, 0.0, 0.0020, 0.0, 0.0, 0.0050, 0.125,
						0.0, 0.0, 0.0020, 0.057, 0.015, 0.015, 0.0, 0.0020, 0.0, 0.0080, 0.0 },
				{ 0.0, 0.0, 0.0, 0.132, 0.132, 0.029, 0.029, 0.044, 0.015, 0.0, 0.0, 0.0, 0.074, 0.162, 0.074, 0.0,
						0.147, 0.0, 0.0, 0.029, 0.015, 0.0, 0.0, 0.118, 0.0, 0.0, 0.0 },
				{ 0.0, 0.036, 0.03, 0.0, 0.095, 0.0, 0.054, 0.03, 0.0, 0.0, 0.0, 0.0060, 0.0, 0.042, 0.054, 0.0060,
						0.06, 0.012, 0.03, 0.232, 0.238, 0.0060, 0.018, 0.042, 0.0060, 0.0060, 0.0 },
				{ 0.0, 0.0060, 0.061, 0.08, 0.0, 0.074, 0.0, 0.031, 0.031, 0.0, 0.0, 0.012, 0.018, 0.043, 0.018, 0.0,
						0.0060, 0.0, 0.264, 0.184, 0.135, 0.0, 0.0, 0.025, 0.0, 0.012, 0.0 },
				{ 0.0, 0.586, 0.0, 0.0050, 0.017, 0.0, 0.0030, 0.0030, 0.0, 0.134, 0.0, 0.0, 0.0050, 0.0, 0.0080, 0.14,
						0.0, 0.0, 0.021, 0.018, 0.0090, 0.023, 0.0, 0.0020, 0.0, 0.027, 0.0 },
				{ 0.0, 0.0, 0.259, 0.0, 0.052, 0.017, 0.0, 0.086, 0.034, 0.0, 0.0, 0.0, 0.052, 0.069, 0.017, 0.0, 0.0,
						0.0, 0.103, 0.069, 0.207, 0.0, 0.0, 0.034, 0.0, 0.0, 0.0 },
				{ 0.0, 0.043, 0.011, 0.12, 0.12, 0.098, 0.022, 0.0, 0.0, 0.0, 0.011, 0.011, 0.033, 0.0, 0.0, 0.022,
						0.011, 0.033, 0.054, 0.141, 0.228, 0.0, 0.0, 0.011, 0.0, 0.033, 0.0 },
				{ 0.0, 0.016, 0.129, 0.0, 0.048, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.0, 0.194, 0.226, 0.032, 0.048,
						0.0, 0.048, 0.016, 0.177, 0.0, 0.0, 0.032, 0.0, 0.0, 0.0 },
				{ 0.0, 0.276, 0.0, 0.0, 0.0, 0.391, 0.0, 0.0030, 0.0, 0.0, 0.0, 0.0, 0.016, 0.0, 0.0, 0.131, 0.0, 0.0,
						0.0, 0.0050, 0.0030, 0.126, 0.0, 0.0050, 0.0030, 0.04, 0.0 },
				{ 0.0, 0.0, 0.05, 0.05, 0.45, 0.0, 0.0, 0.05, 0.0, 0.0, 0.0, 0.0, 0.1, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.023, 0.045, 0.182, 0.091, 0.023, 0.023, 0.045, 0.114, 0.0, 0.0, 0.0, 0.0, 0.114, 0.0, 0.045,
						0.0, 0.0, 0.0, 0.136, 0.0, 0.0, 0.0, 0.091, 0.0, 0.0, 0.068 },
				{ 0.0, 0.022, 0.111, 0.011, 0.044, 0.0, 0.044, 0.056, 0.067, 0.144, 0.0, 0.011, 0.0, 0.0, 0.156, 0.022,
						0.056, 0.0, 0.122, 0.111, 0.022, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0040, 0.011, 0.026, 0.03, 0.0, 0.0070, 0.0, 0.022, 0.0, 0.0, 0.015, 0.015, 0.0, 0.672, 0.0,
						0.022, 0.0, 0.0, 0.034, 0.056, 0.049, 0.011, 0.0070, 0.0070, 0.011, 0.0 },
				{ 0.0, 0.0090, 0.033, 0.028, 0.023, 0.014, 0.0, 0.0050, 0.089, 0.0050, 0.0, 0.019, 0.164, 0.366, 0.0,
						0.0, 0.033, 0.0, 0.131, 0.023, 0.033, 0.0, 0.0, 0.0050, 0.0090, 0.0, 0.0090 },
				{ 0.0, 0.276, 0.0030, 0.0030, 0.0090, 0.352, 0.0, 0.0, 0.0, 0.076, 0.0, 0.0060, 0.0, 0.0, 0.0, 0.0,
						0.042, 0.0, 0.0060, 0.012, 0.042, 0.118, 0.0, 0.0, 0.0, 0.055, 0.0 },
				{ 0.0, 0.0, 0.136, 0.012, 0.025, 0.0, 0.074, 0.062, 0.0, 0.025, 0.111, 0.0, 0.025, 0.086, 0.074, 0.185,
						0.0, 0.0, 0.012, 0.037, 0.074, 0.0, 0.049, 0.012, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.036, 0.0, 0.0, 0.0, 0.964, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.087, 0.0, 0.186, 0.075, 0.012, 0.012, 0.05, 0.012, 0.0, 0.031, 0.05, 0.025, 0.124, 0.0060,
						0.087, 0.0, 0.0, 0.075, 0.137, 0.025, 0.0, 0.0, 0.0060, 0.0, 0.0 },
				{ 0.0, 0.05, 0.037, 0.123, 0.151, 0.16, 0.018, 0.0, 0.0050, 0.0, 0.0050, 0.0, 0.123, 0.0, 0.027, 0.0050,
						0.032, 0.0, 0.064, 0.0, 0.068, 0.0, 0.0, 0.023, 0.014, 0.091, 0.0050 },
				{ 0.0, 0.014, 0.019, 0.042, 0.194, 0.032, 0.023, 0.088, 0.023, 0.0, 0.0050, 0.0, 0.065, 0.042, 0.023,
						0.023, 0.028, 0.0, 0.051, 0.171, 0.0, 0.0, 0.0090, 0.088, 0.0, 0.032, 0.028 },
				{ 0.0, 0.107, 0.0, 0.0, 0.0, 0.235, 0.0, 0.0, 0.0, 0.342, 0.0, 0.0, 0.0, 0.0, 0.011, 0.23, 0.0, 0.0,
						0.021, 0.0, 0.0, 0.0, 0.0, 0.011, 0.0, 0.043, 0.0 },
				{ 0.0, 0.0, 0.0, 0.304, 0.0, 0.0, 0.13, 0.0, 0.0, 0.0, 0.0, 0.0, 0.043, 0.0, 0.0, 0.043, 0.0, 0.0, 0.0,
						0.348, 0.13, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.069, 0.069, 0.034, 0.0, 0.034, 0.0, 0.0, 0.069, 0.0, 0.0, 0.034, 0.0, 0.0, 0.0, 0.0, 0.241,
						0.0, 0.207, 0.103, 0.103, 0.034, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.182, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.818, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.019, 0.0, 0.142, 0.0, 0.0090, 0.066, 0.142, 0.0, 0.0, 0.0, 0.019, 0.0, 0.057, 0.0090,
						0.0, 0.066, 0.34, 0.075, 0.047, 0.0, 0.0, 0.0090, 0.0, 0.0 },
				{ 0.0, 0.0, 0.0, 0.0, 0.146, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.146, 0.104, 0.0, 0.0, 0.0, 0.0, 0.042,
						0.438, 0.063, 0.0, 0.0, 0.0, 0.0, 0.063, 0.0 } };

		return subProb[i][j];

	}

	public double subScore(int i, int j) {

		if (i < 1 || i > 26 || j < 1 || j > 26)
			return 1;

		double substituteScore[][] = {
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
						0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
				{ 0.0, 1.0, 1.0, 0.087, 0.61, 0.0020, 1.0, 1.0, 0.305, 0.0050, 1.0, 0.61, 1.0, 1.0, 0.203, 0.0080, 1.0,
						1.0, 0.61, 0.017, 0.068, 0.068, 1.0, 0.61, 1.0, 0.122, 1.0 },
				{ 0.0, 1.0, 1.0, 0.076, 0.076, 0.34, 0.34, 0.227, 0.68, 1.0, 1.0, 1.0, 0.136, 0.062, 0.136, 1.0, 0.068,
						1.0, 1.0, 0.34, 0.68, 1.0, 1.0, 0.085, 1.0, 1.0, 1.0 },
				{ 0.0, 0.028, 0.034, 1.0, 0.01, 1.0, 0.019, 0.034, 1.0, 1.0, 1.0, 0.168, 1.0, 0.024, 0.019, 0.168,
						0.017, 0.084, 0.034, 0.0040, 0.0040, 0.168, 0.056, 0.024, 0.168, 0.168, 1.0 },
				{ 0.0, 0.163, 0.016, 0.013, 1.0, 0.014, 1.0, 0.033, 0.033, 1.0, 1.0, 0.082, 0.054, 0.023, 0.054, 1.0,
						0.163, 1.0, 0.0040, 0.0050, 0.0070, 1.0, 1.0, 0.041, 1.0, 0.082, 1.0 },
				{ 0.0, 0.0020, 1.0, 0.221, 0.06, 1.0, 0.331, 0.331, 1.0, 0.0070, 1.0, 1.0, 0.221, 1.0, 0.132, 0.0070,
						1.0, 1.0, 0.047, 0.055, 0.11, 0.044, 1.0, 0.662, 1.0, 0.037, 1.0 },
				{ 0.0, 1.0, 0.039, 1.0, 0.193, 0.58, 1.0, 0.116, 0.29, 1.0, 1.0, 1.0, 0.193, 0.145, 0.58, 1.0, 1.0, 1.0,
						0.097, 0.145, 0.048, 1.0, 1.0, 0.29, 1.0, 1.0, 1.0 },
				{ 0.0, 0.23, 0.92, 0.084, 0.084, 0.102, 0.46, 1.0, 1.0, 1.0, 0.92, 0.92, 0.307, 1.0, 1.0, 0.46, 0.92,
						0.307, 0.184, 0.071, 0.044, 1.0, 1.0, 0.92, 1.0, 0.307, 1.0 },
				{ 0.0, 0.62, 0.078, 1.0, 0.207, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.31, 1.0, 0.052, 0.044, 0.31, 0.207, 1.0,
						0.207, 0.62, 0.056, 1.0, 1.0, 0.31, 1.0, 1.0, 1.0 },
				{ 0.0, 0.0040, 1.0, 1.0, 1.0, 0.0030, 1.0, 0.373, 1.0, 1.0, 1.0, 1.0, 0.062, 1.0, 1.0, 0.0080, 1.0, 1.0,
						1.0, 0.186, 0.373, 0.0080, 1.0, 0.186, 0.373, 0.025, 1.0 },
				{ 0.0, 1.0, 0.2, 0.2, 0.022, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 0.04,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.44, 0.22, 0.055, 0.11, 0.44, 0.44, 0.22, 0.088, 1.0, 1.0, 1.0, 1.0, 0.088, 1.0, 0.22, 1.0, 1.0,
						1.0, 0.073, 1.0, 1.0, 1.0, 0.11, 1.0, 1.0, 0.147 },
				{ 0.0, 0.45, 0.09, 0.9, 0.225, 1.0, 0.225, 0.18, 0.15, 0.069, 1.0, 0.9, 1.0, 1.0, 0.064, 0.45, 0.18,
						1.0, 0.082, 0.09, 0.45, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.268, 0.089, 0.038, 0.034, 1.0, 0.134, 1.0, 0.045, 1.0, 1.0, 0.067, 0.067, 1.0, 0.0010, 1.0,
						0.045, 1.0, 1.0, 0.03, 0.018, 0.021, 0.089, 0.134, 0.134, 0.089, 1.0 },
				{ 0.0, 0.107, 0.03, 0.036, 0.043, 0.071, 1.0, 0.213, 0.011, 0.213, 1.0, 0.053, 0.0060, 0.0030, 1.0, 1.0,
						0.03, 1.0, 0.0080, 0.043, 0.03, 1.0, 1.0, 0.213, 0.107, 1.0, 0.107 },
				{ 0.0, 0.0040, 0.33, 0.33, 0.11, 0.0030, 1.0, 1.0, 1.0, 0.013, 1.0, 0.165, 1.0, 1.0, 1.0, 1.0, 0.024,
						1.0, 0.165, 0.082, 0.024, 0.0080, 1.0, 1.0, 1.0, 0.018, 1.0 },
				{ 0.0, 1.0, 0.074, 0.81, 0.405, 1.0, 0.135, 0.162, 1.0, 0.405, 0.09, 1.0, 0.405, 0.116, 0.135, 0.054,
						1.0, 1.0, 0.81, 0.27, 0.135, 1.0, 0.202, 0.81, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 0.28, 1.0, 1.0, 1.0, 0.01, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 0.012, 1.0, 0.0050, 0.013, 0.081, 0.081, 0.02, 0.081, 1.0, 0.032, 0.02, 0.04, 0.0080, 0.161,
						0.012, 1.0, 1.0, 0.013, 0.0070, 0.04, 1.0, 1.0, 0.161, 1.0, 1.0 },
				{ 0.0, 0.02, 0.027, 0.0080, 0.0070, 0.0060, 0.055, 1.0, 0.219, 1.0, 0.219, 1.0, 0.0080, 1.0, 0.037,
						0.219, 0.031, 1.0, 0.016, 1.0, 0.015, 1.0, 1.0, 0.044, 0.073, 0.011, 0.219 },
				{ 0.0, 0.072, 0.054, 0.024, 0.0050, 0.031, 0.043, 0.011, 0.043, 1.0, 0.216, 1.0, 0.015, 0.024, 0.043,
						0.043, 0.036, 1.0, 0.02, 0.0060, 1.0, 1.0, 0.108, 0.011, 1.0, 0.031, 0.036 },
				{ 0.0, 0.094, 1.0, 1.0, 1.0, 0.042, 1.0, 1.0, 1.0, 0.029, 1.0, 1.0, 1.0, 1.0, 0.935, 0.043, 1.0, 1.0,
						0.467, 1.0, 1.0, 1.0, 1.0, 0.935, 1.0, 0.234, 1.0 },
				{ 0.0, 1.0, 1.0, 0.033, 1.0, 1.0, 0.077, 1.0, 1.0, 1.0, 1.0, 1.0, 0.23, 1.0, 1.0, 0.23, 1.0, 1.0, 1.0,
						0.029, 0.077, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 0.145, 0.145, 0.29, 1.0, 0.29, 1.0, 1.0, 0.145, 1.0, 1.0, 0.29, 1.0, 1.0, 1.0, 1.0, 0.041, 1.0,
						0.048, 0.097, 0.097, 0.29, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 0.55, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.122,
						1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 0.053, 1.0, 0.0070, 1.0, 0.106, 0.015, 0.0070, 1.0, 1.0, 1.0, 0.053, 1.0, 0.018, 0.106,
						1.0, 0.015, 0.0030, 0.013, 0.021, 1.0, 1.0, 0.106, 1.0, 1.0 },
				{ 0.0, 1.0, 1.0, 1.0, 0.069, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.069, 0.096, 1.0, 1.0, 1.0, 1.0, 0.24,
						0.023, 0.16, 1.0, 1.0, 1.0, 1.0, 0.16, 1.0 } };

		return substituteScore[i][j];

	}

}
